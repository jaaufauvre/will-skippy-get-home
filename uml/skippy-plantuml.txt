@startuml
skinparam classAttributeIconSize 0
 
class "Die" {
  {field} {static} -instance: Die
  {field} -history : Map<Direction, long>
  {field} -random : Random
  {method} +printStats()
  {method} +roll() : Direction
}

enum "Direction" {
  {field} +NORTH
  {field} +EAST
  {field} +SOUTH
  {field} +WEST
}

class "Grid" {
  {field} -dimension : long
  {field} -items : Map<GridItem, Point>
  {method} +getItemLocation(GridItem) : Point
  {method} +moveItem(GridItem, Direction) : Point
  {method} +placeItem(GridItem, Point)
}

class "GridException" {
  {field} +message : string
}

interface "GridItem"

class "InvalidDimensionException"

class "ItemExistsException"

class "ItemNotFoundException"

class "Kangaroo" {
  {field} -die : Die
  {method} +chortle(String)
  {method} +findHome(Grid, GridItem)
}

class "OutOfBoundsException" {
  {field} +location : Point
}

class "Point" {
  {field} +x : long
  {field} +y : long
  {method} +getNeighbour(Direction) : Point
}

"Die" --> "Die" : instance
"Die" --> "Direction" : history
"Grid" --> "Direction" : use
"GridException" <|-- "InvalidDimensionException"
"GridException" <|-- "ItemExistsException"
"GridException" <|-- "ItemNotFoundException"
"GridException" <|-- "OutOfBoundsException"
"GridItem" <|.. "Kangaroo"
"Grid" --> "GridItem" : items
"Grid" --> "Point" : items
"Kangaroo" --> "Die" : die
"Kangaroo" --> "Grid" : use
"OutOfBoundsException" --> "Point" : location
"Point" --> "Direction" : use
@enduml