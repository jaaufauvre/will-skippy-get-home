@startuml
skinparam classAttributeIconSize 0
 
class "Die" {
  {field} {static} -instance: Die
  {field} -history : Map<Direction, long>
  {field} -random : Random
  {method} +print_stats
  {method} +roll : Direction
}

enum "Direction" {
  {field} +NORTH
  {field} +EAST
  {field} +SOUTH
  {field} +WEST
}

class "Grid" {
  {field} -dimension : long
  {field} -items : Map<GridItem, Point>
  {method} +get_item_location(GridItem) : Point
  {method} +move_item(GridItem, Direction) : Point
  {method} +place_item(GridItem, Point)
}

class "StandardError" {
  {field} +message : String
}

interface "GridItem"

class "ItemExistsError"

class "ItemNotFoundError"

class "Kangaroo" {
  {field} -die : Die
  {method} +chortle(String)
  {method} +find_home(Grid, GridItem)
}

class "OutOfBoundsError" {
  {field} +location : Point
}

class "Point" {
  {field} +x_coordinate : long
  {field} +y_coordinate : long
  {method} +get_neighbour(Direction) : Point
  {method} +to_s : String
  {method} +==(Point) : Boolean
}

"Die" --> "Die" : instance
"Die" --> "Direction" : history
"Grid" --> "Direction" : use
"StandardError" <|-- "ItemExistsError"
"StandardError" <|-- "ItemNotFoundError"
"StandardError" <|-- "OutOfBoundsError"
"GridItem" <|.. "Kangaroo"
"Grid" --> "GridItem" : items
"Grid" --> "Point" : items
"Kangaroo" --> "Die" : die
"Kangaroo" --> "Grid" : use
"OutOfBoundsError" --> "Point" : location
"Point" --> "Direction" : use
@enduml