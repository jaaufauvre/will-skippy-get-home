@startuml
skinparam classAttributeIconSize 0

class StandardError {
  {field} +message : String
}

StandardError <|-- Skippy::Grid.ItemExistsError
StandardError <|-- Skippy::Grid.ItemNotFoundError
StandardError <|-- Skippy::Grid.OutOfBoundsError
    
namespace Skippy::Kangaroo {

    class Home

    class Kangaroo {
      {field} -die : Die
      {method} +chortle(String)
      {method} +find_home(Grid, Home)
    }
    
    Kangaroo --> Skippy::Direction.Die : die
    Kangaroo --> Skippy::Grid.Grid : use
    Kangaroo --> Home : use
}

namespace Skippy::Direction {

    class Die {
      {field} {static} -instance: Die
      {field} -history : Hash<Direction, Integer>
      {field} -random : Random
      {method} +roll : Direction
      {method} +print_stats  
    }

    enum Direction {
      {field} +NORTH
      {field} +EAST
      {field} +SOUTH
      {field} +WEST
    }
    
    Die --> Die : instance
    Die --> Direction : history
}

namespace Skippy::Grid {

    class Grid {
      {field} -dimension : Integer
      {field} -items : Hash<Object, Point>
      {method} +place_item(Object, Point)
      {method} +get_item_location(Object) : Point
      {method} +move_item(Object, Direction) : Point
    }
    
    class Point {
      {field} +x_coordinate : Integer
      {field} +y_coordinate : Integer
      {method} +get_neighbour(Direction) : Point
      {method} +to_s : String
      {method} +==(Point) : Boolean
    }

    class ItemExistsError

    class ItemNotFoundError

    class OutOfBoundsError {
      {field} +location : Point
    }
    
    Grid --> Skippy::Direction.Direction : use
    OutOfBoundsError --> Point : location
    Grid --> Point : items
    Point --> Skippy::Direction.Direction : use
}
@enduml